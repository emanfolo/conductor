/*
 * Prime Calculation Task API
 *
 * API for prime number calculation task
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PrimeCalculationProgress {
    /// The current number being checked
    #[serde(rename = "current_number")]
    pub current_number: i64,
    /// Number of primes found so far
    #[serde(rename = "found_primes")]
    pub found_primes: i32,
    /// Percentage of completion
    #[serde(rename = "percentage_complete", skip_serializing_if = "Option::is_none")]
    pub percentage_complete: Option<f32>,
    /// Current memory usage in bytes
    #[serde(rename = "current_memory_usage", skip_serializing_if = "Option::is_none")]
    pub current_memory_usage: Option<i64>,
    /// Time elapsed in milliseconds
    #[serde(rename = "elapsed_time_ms", skip_serializing_if = "Option::is_none")]
    pub elapsed_time_ms: Option<i64>,
}

impl PrimeCalculationProgress {
    pub fn new(current_number: i64, found_primes: i32) -> PrimeCalculationProgress {
        PrimeCalculationProgress {
            current_number,
            found_primes,
            percentage_complete: None,
            current_memory_usage: None,
            elapsed_time_ms: None,
        }
    }
}

